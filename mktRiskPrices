import os
import glob
import csv
import openpyxl
from pathlib import Path
import datetime
import numpy as np
import tkinter as tk
from tkinter import filedialog
import pandas as pd
import shutil
import time as t
import win32com.client
from pandas import ExcelWriter
from openpyxl import load_workbook
from openpyxl.utils.dataframe import dataframe_to_rows
import win32com.client

today = datetime.date.today()
todayDate = str(today.month)+"."+str(today.day)+"."+str(today.year)

filepath = (r"C:/Users/youngc/Desktop/New folder/")
# filepath = (r"C:/Users/youngc/Desktop/Mkt Risk Prices/")
# filepath = (r"//kc-grain-vol/KC-GRAIN-VOL/ACCOUNTING/DAILY P&L/Market Risk Prices/")
filename = ("Test_File - " + todayDate + ".xlsx")
savefile = ("C:/Users/youngc/Desktop/New folder/" + filename)
template = (r"C:\Users\youngc\Desktop\New folder\mktRiskPrices Template.xlsx")

filename_macro = 'Macro ' + todayDate + '.xlsm'
macrofile = filepath + filename_macro

root= tk.Tk()

canvas1 = tk.Canvas(root, width = 300, height = 300, bg = 'lightsteelblue2', relief = 'raised')
canvas1.pack()

# Create getExcel function, which imports a selected XLSX file
def getExcel ():
    global df
    
    import_filepath = filedialog.askopenfilename(initialdir = filepath, title = "Select File", filetypes = (("excel files", "*.xlsm"),("all files","*.*")))
    
    xls = (import_filepath)
    print(xls)
    fields = ['COMMODITY','ZONE','OPTION','DELV_PERIOD','PRO_LVL','BASIS','CURR_DATE','OFFICE']
    df = pd.read_excel (xls, sheet_name = "e", usecols=fields)
    wb = load_workbook(filename = xls)
    sheet_names = wb.sheetnames
    name = sheet_names[1]
    sheet_ranges = wb[name]
    root.destroy()
browseButton_XLS = tk.Button(text="      Import Excel File     ", command=getExcel, bg='green', fg='white', font=('helvetica', 12, 'bold'))
canvas1.create_window(150, 150, window=browseButton_XLS)

root.mainloop()

dfTemplate = pd.read_excel(template)

tester = ['YCE']
tester2 = ['GRJ']
tester3 = ['TGF']
tester4 = ['YGS']
tester5 = ['0.00']
tester6 = ['CP']
tester7 = ['YSB']
tester8 = ['CLA']
tester9 = ['0']

indexDelv = df[df['DELV_PERIOD'] == '2022-12-01'].index
df.drop(indexDelv, inplace=True)
df.loc[df.OFFICE == 'CLP', 'OFFICE'] = "CP"
df.loc[df.OFFICE == 'ETH', 'OFFICE'] = "KC"
df.loc[df.OFFICE == 'GRJ', 'OFFICE'] = "GJ"
df.loc[df.OFFICE == 'NRF', 'OFFICE'] = "NF"
df.loc[df.OFFICE == 'YRK', 'OFFICE'] = "YT"
df.loc[df.ZONE.str.contains("GRJ"), 'ZONE'] = 'GRJ'

df['Test'] = np.where((df['COMMODITY'].isin(tester) & df['ZONE'].isin(tester2)),'True','False')
df['COMMODITY'] = np.where(df['Test'] == 'True', 'YC-LDC', df.COMMODITY)

df['Test2'] = np.where((df['OFFICE'].isin(tester3) & df['COMMODITY'].isin(tester4) & df['BASIS'].isin(tester5)),'True','False')
df = df[df['Test2'] != 'True']

df['Test3'] = np.where((df['OFFICE'].isin(tester3) & df['COMMODITY'].isin(tester4) & df['BASIS'].isin(tester9)),'True','False')
df = df[df['Test3'] != 'True']

df['Test4'] = np.where((df['OFFICE'].isin(tester6) & df['COMMODITY'].isin(tester7) & df['ZONE'].isin(tester8) & df['BASIS'].isin(tester5)),'True','False')
df = df[df['Test4'] != 'True']

df['Test5'] = np.where((df['OFFICE'].isin(tester6) & df['COMMODITY'].isin(tester7) & df['ZONE'].isin(tester8) & df['BASIS'].isin(tester9)),'True','False')
df = df[df['Test5'] != 'True']

to_drop = ['Test','Test2','Test3','Test4','Test5']
df.drop(to_drop, inplace=True, axis=1)

df['DELV_PERIOD'] = pd.to_datetime(df['DELV_PERIOD'].astype(str), format='%Y-%m-%d')
df['DELV_PERIOD'] = df['DELV_PERIOD'].dt.strftime('%d-%b-%y')

df['CURR_DATE'] = pd.to_datetime(df['CURR_DATE'].astype(str), format='%Y-%m-%d')
df['CURR_DATE'] = df['CURR_DATE'].dt.strftime('%d-%b-%y')

frames = [df,dfTemplate]
df2 = pd.concat(frames, sort=True)
df2 = df2[['COMMODITY','ZONE','OPTION','DELV_PERIOD','PRO_LVL','BASIS','CURR_DATE','OFFICE']]
df2.to_excel(template, index=False)
